{"version":3,"sources":["axios.js","requests.js","components/Banner.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","padding","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71d6d8a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n/**base URL to make requests to the movie database */\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n// instance.get('hello'); => https://api.themoviedb.org/3/hello\r\nexport default instance;","const API_KEY  = \"4bd4e42f827c58a6d51775926e17f283\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      //   console.log(\r\n      //     request.data.results[\r\n      //       Math.floor(Math.random() * request.data.results.length - 1)\r\n      //     ]\r\n      //   );\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      {/* Background Image */}\r\n      {/* Title */}\r\n      {/* div > two button(play & my list) */}\r\n      {/* description */}\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner_fadebutton\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Nav() {\r\n  const [show, handleshow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleshow(true);\r\n      } else handleshow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Avatar logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"../axios\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"99%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    // console.table(movie?.title)\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              onClick={() => handleClick(movie)}\r\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ padding: \"40px\" }}>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\nimport './App.css';\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\nimport Row from \"./components/Row\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Nav Bar */}\n      <Nav />\n      {/* Banner */}\n      <Banner />\n      {/* Rows */}\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}